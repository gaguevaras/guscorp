# Pull base image
FROM python:3.12.2-slim-bookworm AS builder

# set work directory
WORKDIR /code

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt update && apt install -y \
    build-essential \
    libssl-dev \
    libffi-dev \
    ffmpeg \
    libsndfile1 \
    portaudio19-dev \
    python3-pyaudio \
    && rm -rf /var/lib/apt/lists/*

# Install dependencies
COPY requirements.txt requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /code/wheels -r requirements.txt

#########
# FINAL #
#########
FROM python:3.12.2-slim-bookworm

# create directory for the app user
RUN mkdir -p /code
WORKDIR /code

# Install system dependencies
RUN apt update && apt install -y \
    build-essential \
    libssl-dev \
    libffi-dev \
    ffmpeg \
    libsndfile1 \
    portaudio19-dev \
    python3-pyaudio \
    && rm -rf /var/lib/apt/lists/*

# install dependencies
COPY --from=builder /code/wheels /wheels
COPY --from=builder /code/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# Create media directories and set permissions
RUN mkdir -p /code/media/lesson_images /code/media/lesson_audio && \
    chmod -R 755 /code/media

# copy project
COPY . /code/

# Expose port 8000
EXPOSE 8000

# Use gunicorn on port 8000
CMD ["gunicorn", "--bind", ":8000", "--workers", "2", "django_project.wsgi"]